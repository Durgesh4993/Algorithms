#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
  int n;
  cin >> n;
  vector<vector<int>> dp(1 << n, vector<int>(n, 1e9));
  vector<vector<int>> dist(n, vector<int>(n));
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      cin >> dist[i][j];
    }
  }
  for (int i = 0; i < n; i++) {
    dp[1 << i][i] = 0;
  }
  for (int i = 0; i < (1 << n); i++) {
    for (int j = 0; j < n; j++) {
      for (int k = 0; k < n; k++) {
        if (!(i & (1 << k))) {
          dp[i | (1 << k)][k] = min(dp[i | (1 << k)][k], dp[i][j] + dist[j][k]);
        }
      }
    }
  }
  cout << dp[(1 << n) - 1][0] << endl;
  return 0;
}
